\name{startpars}
\alias{startpars}
\title{
Generates and returns a set of starting parameters by sampling the parameter space based
on the evaluation of the function and constraints.
}
\description{
A simple penalty barrier function is formed which is then evaluated at randomly sampled points
based on the upper and lower parameter bounds (when \code{eval.type} = 2), else the objective function directly
for values not violating any inequality constraints (when \code{eval.type} = 1). 
The sampled points can be generated from the uniform, normal or truncated normal distribution.
}
\usage{
startpars(pars = NULL, fixed = NULL, fun, eqfun = NULL, eqB = NULL, ineqfun = NULL, ineqLB = NULL, 
		ineqUB = NULL, LB = NULL, UB = NULL, distr = rep(1, length(LB)), distr.opt = list(), 
		n.sim = 20000, parallel = FALSE, parallel.control = list(pkg = c("multicore", "snowfall"), cores = 2), 
		rseed = NULL, bestN = 15, eval.type = 1, ...)
}
\arguments{
  \item{pars}{
The starting parameter vector. This is not required unless the fixed option is also used.
}
  \item{fixed}{
The numeric index which indicates those parameters which should stay fixed instead of being randomly generated.
}
  \item{fun}{
The main function which takes as first argument the parameter vector and returns a single value.
}
  \item{eqfun}{
(Optional) The equality constraint function returning the vector of evaluated equality constraints.
}
  \item{eqB}{
(Optional) The equality constraints.
}
  \item{ineqfun}{
(Optional) The inequality constraint function returning the vector of evaluated inequality constraints.
}
  \item{ineqLB}{
(Optional) The lower bound of the inequality constraints.
}
  \item{ineqUB}{
(Optional) The upper bound of the inequality constraints.
}
  \item{LB}{
The lower bound on the parameters. This is not optional in this function.
}
  \item{UB}{
The upper bound on the parameters. This is not optional in this function.
}
  \item{distr}{
A numeric vector of length equal to the number of parameters, indicating the choice of distribution 
to use for the random parameter  generation. Choices are uniform (1), truncated normal (2), and normal (3).
}
  \item{distr.opt}{
If any choice in \code{distr} was anything other than uniform (1), this is a list equal to the length of the
parameters with sub-components for the mean and sd, which are required in the truncated normal and
normal distributions.
}
  \item{bestN}{
The best N (less than or equal to n.sim) set of parameters to return.
}
  \item{n.sim}{
The number of random parameter sets to generate.
}
  \item{parallel}{
Whether to make use of parallel processing on multicore systems.
}
  \item{parallel.control}{ 
The parallel control options including the type of package for performing the parallel calculations 
(\sQuote{multicore} for non-windows O/S and \sQuote{snowfall} for all O/S), and the number of cores to make use of.
}
  \item{rseed}{
(Optional) A seed to initiate the random number generator, else system time will be used.
}
  \item{eval.type}{
Either 1 (default) for the direction evaluation of the function (excluding inequality constraint violations) 
or 2 for the penalty barrier method.
}
  \item{\dots}{
(Optional) Additional parameters passed to the main, equality or inequality functions
}
}
\details{
Given a set of lower and upper bounds, the function generates, for those parameters not set as fixed,
random values from one of the 3 chosen distributions. For simple functions with only inequality constraints,
the direct method (\code{eval.type} = 1) might work better. For more complex setups with both equality and 
inequality constraints the penalty barrier method (\code{eval.type} = 2)might be a better choice.
}
\value{
A matrix of dimension bestN x (no.parameters + 1). The last column is the evaluated function value.
}
\author{
Alexios Ghalanos and Stefan Theussl\cr
}
\note{
The choice of which distribution to use for randomly sampling the parameter space should be driven by the
user's knowledge of the problem and confidence or lack thereof of the parameter distribution. The uniform distribution
indicates a lack of confidence in the location or dispersion of the parameter, while the truncated normal indicates
a more confident choice in both the location and dispersion. On the other hand, the normal indicates perhaps a lack
of knowledge in the upper or lower bounds, but some confidence in the location and dispersion of the parameter.
In using choices (2) and (3) for \code{distr}, the \code{distr.opt} list must be supplied with \code{mean} and 
\code{sd} as subcomponents for those parameters not using the uniform.
}
\keyword{optimize}